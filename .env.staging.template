# ====================================================================
# Lamsa STAGING Environment Configuration Template
# ====================================================================
# This template is for pre-production testing environments
# Copy this file to .env.staging and configure with staging values
#
# STAGING CHARACTERISTICS:
# - Production-like configuration
# - Test payment keys
# - Enhanced logging for debugging
# - Real services (not mocked)
# - Staging-specific URLs

# ====================================================================
# CORE CONFIGURATION
# ====================================================================

NODE_ENV=staging
PORT=3000
APP_NAME=Lamsa
APP_VERSION=1.0.0-staging
DEFAULT_LANGUAGE=ar
CURRENCY=JOD
TIMEZONE=Asia/Amman

# ====================================================================
# AUTHENTICATION & SECURITY
# ====================================================================

# Generate unique secrets for staging
# openssl rand -hex 64
JWT_SECRET=your_staging_jwt_secret_64_characters_minimum
JWT_EXPIRES_IN=15m
REFRESH_TOKEN_EXPIRES_IN=7d
ENABLE_SESSION_ROTATION=true
MAX_CONCURRENT_SESSIONS=5

# Session Security
SESSION_SECRET=your_staging_session_secret_32_characters
COOKIE_SECURE=true
COOKIE_SAME_SITE=strict

# ====================================================================
# DATABASE (STAGING)
# ====================================================================

# Staging Supabase project (separate from production)
SUPABASE_URL=https://your-staging-project.supabase.co
SUPABASE_ANON_KEY=your_staging_anon_key
SUPABASE_SERVICE_KEY=your_staging_service_key
DATABASE_URL=postgresql://postgres:[password]@db.[staging-ref].supabase.co:5432/postgres

# Connection Pool
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10

# ====================================================================
# REDIS CACHE (STAGING)
# ====================================================================

REDIS_URL=redis://your-staging-redis:6379
REDIS_PASSWORD=your_staging_redis_password
REDIS_DB=0
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000
CACHE_TTL=300

# ====================================================================
# PAYMENT GATEWAY (TEST MODE)
# ====================================================================

# Tap Payment TEST credentials
TAP_SECRET_KEY=sk_test_your_staging_tap_secret_key
TAP_PUBLIC_KEY=pk_test_your_staging_tap_public_key
TAP_API_URL=https://api.tap.company/v2
TAP_WEBHOOK_SECRET=your_staging_webhook_secret

# ====================================================================
# SMS SERVICE (TEST MODE)
# ====================================================================

# Twilio Test credentials
TWILIO_ACCOUNT_SID=your_staging_twilio_sid
TWILIO_AUTH_TOKEN=your_staging_twilio_token
TWILIO_PHONE_NUMBER=+15005550006
TWILIO_VERIFY_SERVICE_SID=your_staging_verify_service

# ====================================================================
# PUSH NOTIFICATIONS (STAGING)
# ====================================================================

EXPO_PUSH_TOKEN=your_staging_expo_push_token
FIREBASE_SERVICE_ACCOUNT=/secrets/firebase-staging-service-account.json

# ====================================================================
# MONITORING (ENHANCED FOR STAGING)
# ====================================================================

# Sentry (staging project)
SENTRY_DSN=https://your-staging-key@sentry.io/staging-project-id
SENTRY_ENVIRONMENT=staging
SENTRY_RELEASE=lamsa@1.0.0-staging

# Performance Monitoring
ENABLE_PROMETHEUS=true
PROMETHEUS_PORT=9090
ENABLE_PERFORMANCE_MONITORING=true

# Enhanced Logging for Staging
LOG_LEVEL=info
ENABLE_MORGAN_LOGGING=true
ENABLE_DETAILED_LOGGING=true
ENABLE_ELASTICSEARCH=false
ENABLE_CLOUDWATCH=true

# ====================================================================
# ALERTING (STAGING CHANNELS)
# ====================================================================

# Slack (staging channels)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/STAGING/WEBHOOK
SLACK_CHANNEL_CRITICAL=#staging-alerts-critical
SLACK_CHANNEL_WARNINGS=#staging-alerts-warnings

# Email Alerts (staging recipients)
SENDGRID_API_KEY=your_staging_sendgrid_key
ALERT_FROM_EMAIL=staging-alerts@lamsa.com
CRITICAL_ALERT_EMAILS=staging@lamsa.com,qa@lamsa.com

# PagerDuty (optional for staging)
PAGERDUTY_SERVICE_KEY=
ENABLE_PAGERDUTY=false

# ====================================================================
# SECURITY CONFIGURATION
# ====================================================================

# CORS (staging domains)
CORS_ORIGINS=https://staging.lamsa.com,https://staging-app.lamsa.com,https://staging-admin.lamsa.com
CORS_CREDENTIALS=true

# Rate Limiting (more permissive for testing)
ENABLE_RATE_LIMITING=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=200
SKIP_RATE_LIMIT=false

# Security Headers
ENABLE_HELMET=true
HSTS_MAX_AGE=86400

# ====================================================================
# FEATURE FLAGS (STAGING)
# ====================================================================

# API Documentation (enabled for QA)
ENABLE_SWAGGER=true

# Core Features
ENABLE_WEBSOCKETS=true
ENABLE_CACHING=true
ENABLE_COMPRESSION=true

# Testing Features (enabled for staging)
ENABLE_DEBUG=false
ENABLE_MOCK_PAYMENTS=false
ENABLE_MOCK_SMS=false

# Staging-specific features
ENABLE_TEST_ENDPOINTS=true
ENABLE_QA_TOOLS=true
ENABLE_PERFORMANCE_PROFILING=true

# ====================================================================
# CDN & ASSETS (STAGING)
# ====================================================================

CDN_URL=https://staging-cdn.lamsa.com
STATIC_ASSETS_URL=https://staging-assets.lamsa.com
ENABLE_CDN=true

# ====================================================================
# HEALTH CHECKS
# ====================================================================

HEALTH_CHECK_URL=https://staging-api.lamsa.com
HEALTH_CHECK_TIMEOUT=5000
ENABLE_DETAILED_HEALTH=true

# ====================================================================
# BACKUP CONFIGURATION (STAGING)
# ====================================================================

BACKUP_PROVIDER=aws
BACKUP_RETENTION_DAYS=7
BACKUP_COMPRESSION=true
BACKUP_ENCRYPTION=true
BACKUP_ENCRYPTION_KEY=your_staging_backup_encryption_key

# AWS S3 Staging Buckets
AWS_ACCESS_KEY_ID=your_staging_aws_key
AWS_SECRET_ACCESS_KEY=your_staging_aws_secret
AWS_REGION=eu-central-1
AWS_S3_BUCKET=lamsa-staging-uploads
AWS_BACKUP_BUCKET=lamsa-staging-backups

# ====================================================================
# DEPLOYMENT CONFIGURATION
# ====================================================================

DEPLOYMENT_PLATFORM=aws
CLUSTER_NAME=lamsa-staging-ecs
NAMESPACE=staging
MIN_REPLICAS=1
MAX_REPLICAS=5
TARGET_CPU_UTILIZATION=70

# ====================================================================
# STAGING URLS
# ====================================================================

# Component URLs
API_URL=https://staging-api.lamsa.com
WEB_URL=https://staging-admin.lamsa.com
MOBILE_API_URL=https://staging-api.lamsa.com

# ====================================================================
# QA & TESTING CONFIGURATION
# ====================================================================

# Test Data Generation
ENABLE_TEST_DATA_GENERATION=true
TEST_DATA_PREFIX=staging_

# API Testing
ENABLE_API_RESPONSE_VALIDATION=true
ENABLE_REQUEST_LOGGING=true

# Performance Testing
ENABLE_LOAD_TEST_ENDPOINTS=true
MAX_CONCURRENT_CONNECTIONS=1000

# ====================================================================
# STAGING CHECKLIST
# ====================================================================
# 
# Before deploying to staging:
# 
# Configuration:
# ✅ All secrets are unique to staging
# ✅ Using staging Supabase project
# ✅ Test payment keys configured
# ✅ Staging URLs throughout
# 
# Services:
# ✅ Staging Redis instance
# ✅ Staging monitoring project
# ✅ Staging Slack channels
# ✅ Test SMS numbers configured
# 
# Features:
# ✅ Swagger enabled for QA
# ✅ Enhanced logging enabled
# ✅ Test endpoints enabled
# ✅ Mock services disabled
# 
# Security:
# ✅ HTTPS enforced
# ✅ CORS configured for staging domains
# ✅ Rate limiting active
# ✅ Unique secrets (not shared with dev/prod)
# 
# DEPLOYMENT STEPS:
# 1. Validate configuration: node scripts/validate-env.js all staging
# 2. Deploy to staging cluster
# 3. Run smoke tests
# 4. Notify QA team
# 5. Monitor for 24 hours before production