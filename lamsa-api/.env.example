# ====================================================================
# Lamsa API Environment Configuration
# ====================================================================
# This file contains all environment variables needed for the API
# Copy this file to .env and set your actual values
# NEVER commit .env files to version control!

# ====================================================================
# REQUIRED CONFIGURATIONS (Must be set for basic functionality)
# ====================================================================

# Server Configuration
PORT=3000
NODE_ENV=development
APP_NAME=Lamsa
APP_VERSION=1.0.0
DEFAULT_LANGUAGE=ar
CURRENCY=JOD
TIMEZONE=Asia/Amman

# JWT Authentication (CRITICAL - MUST BE SECURE IN PRODUCTION)
# Generate a secure secret: openssl rand -hex 64
# Minimum 32 characters required in development, 64+ REQUIRED in production
# NEVER use weak patterns, dictionary words, or predictable values
JWT_SECRET=CHANGE_THIS_TO_A_SECURE_64_CHARACTER_SECRET_IN_PRODUCTION_USE_OPENSSL_RAND_HEX_64
JWT_EXPIRES_IN=15m
REFRESH_TOKEN_EXPIRES_IN=7d
ENABLE_SESSION_ROTATION=false
MAX_CONCURRENT_SESSIONS=5

# Supabase Database Configuration
# Get these from your Supabase project: Settings > API
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# ⚠️  CRITICAL SECURITY WARNING:
# Service key has admin privileges - NEVER expose or commit!
SUPABASE_SERVICE_KEY=your_supabase_service_key_here
DATABASE_URL=postgresql://postgres:password@localhost:54322/postgres

# ====================================================================
# PERFORMANCE & CACHING (Recommended for production)
# ====================================================================

# Redis Cache Configuration (improves performance significantly)
# Leave blank to use in-memory caching (development only)
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000
CACHE_TTL=300

# ====================================================================
# JORDAN-SPECIFIC INTEGRATIONS (Required for full functionality)
# ====================================================================

# Tap Payment Gateway (Jordan's primary payment processor)
# Register at: https://www.tap.company/jo/
TAP_SECRET_KEY=sk_test_your_secret_key_here
TAP_PUBLIC_KEY=pk_test_your_public_key_here
TAP_API_URL=https://api.tap.company/v2
TAP_WEBHOOK_SECRET=your_tap_webhook_secret

# SMS Service (for OTP verification)
# Twilio is recommended for international support
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=+1234567890
TWILIO_VERIFY_SERVICE_SID=your_twilio_verify_service_sid

# ====================================================================
# MOBILE APP INTEGRATIONS (Required for mobile notifications)
# ====================================================================

# Expo Push Notifications
# Get from: https://expo.dev/accounts/[username]/projects/[project]/credentials
EXPO_PUSH_TOKEN=your_expo_push_token_here
FIREBASE_SERVICE_ACCOUNT=/path/to/firebase-service-account.json

# ====================================================================
# MONITORING & OBSERVABILITY (Production recommended)
# ====================================================================

# New Relic APM
NEW_RELIC_LICENSE_KEY=your_newrelic_license_key
NEW_RELIC_APP_NAME=Lamsa-API-Development
ENABLE_NEWRELIC=false

# Sentry Error Tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_RELEASE=lamsa@1.0.0

# Performance Monitoring
ENABLE_PROMETHEUS=false
PROMETHEUS_PORT=9090
ENABLE_PERFORMANCE_MONITORING=false

# ====================================================================
# ALERTING & NOTIFICATIONS (Production only)
# ====================================================================

# Slack Webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx/xxx/xxx
SLACK_CHANNEL_CRITICAL=#alerts-critical
SLACK_CHANNEL_WARNINGS=#alerts-warnings

# Email Service (for reports, notifications, alerts)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password

# SendGrid (Production email service)
SENDGRID_API_KEY=your_sendgrid_api_key
ALERT_FROM_EMAIL=alerts@lamsa.com
CRITICAL_ALERT_EMAILS=admin@lamsa.com,devops@lamsa.com

# PagerDuty
PAGERDUTY_SERVICE_KEY=your_pagerduty_service_key
ENABLE_PAGERDUTY=false

# ====================================================================
# SECURITY CONFIGURATIONS
# ====================================================================

# PII Encryption (REQUIRED - Data at rest encryption)
# Generate a secure key: openssl rand -base64 32
# This key encrypts sensitive user data (phone numbers, emails, etc.)
# CRITICAL: Back up this key securely - data cannot be decrypted without it!
PII_ENCRYPTION_KEY=CHANGE_THIS_TO_A_SECURE_BASE64_KEY_USE_OPENSSL_RAND_BASE64_32

# Optional: Custom salt for PII hashing (defaults to 'default-salt' if not set)
# PII_HASH_SALT=your_custom_salt_here

# CORS Origins (comma-separated URLs)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:19006
CORS_CREDENTIALS=true

# Rate Limiting
ENABLE_RATE_LIMITING=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
SKIP_RATE_LIMIT=false

# Security Headers
ENABLE_HELMET=true
HSTS_MAX_AGE=31536000

# Session Security
SESSION_SECRET=another_secure_secret_different_from_jwt
COOKIE_SECURE=false
COOKIE_SAME_SITE=lax

# ====================================================================
# BACKUP & STORAGE CONFIGURATION
# ====================================================================

# Backup Configuration
BACKUP_PROVIDER=aws
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION=true
# ⚠️ SECURITY WARNING: Always enable encryption for production backups
BACKUP_ENCRYPTION=true
BACKUP_ENCRYPTION_KEY=your_32_byte_hex_encoded_backup_encryption_key

# AWS S3 Configuration (for backups and file uploads)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=lamsa-uploads
AWS_BACKUP_BUCKET=lamsa-backups

# ====================================================================
# LOGGING CONFIGURATION
# ====================================================================

LOG_LEVEL=info
ENABLE_MORGAN_LOGGING=true
ENABLE_DETAILED_LOGGING=true
ENABLE_ELASTICSEARCH=false
ENABLE_CLOUDWATCH=false

# ====================================================================
# CDN & ASSETS (Production only)
# ====================================================================

CDN_URL=
STATIC_ASSETS_URL=
ENABLE_CDN=false

# ====================================================================
# HEALTH CHECK
# ====================================================================

HEALTH_CHECK_URL=http://localhost:3000
HEALTH_CHECK_TIMEOUT=5000
ENABLE_DETAILED_HEALTH=true

# ====================================================================
# FEATURE FLAGS
# ====================================================================

ENABLE_SWAGGER=true
ENABLE_WEBSOCKETS=true
ENABLE_CACHING=true
ENABLE_COMPRESSION=true
ENABLE_DEBUG=true
ENABLE_MOCK_PAYMENTS=true
ENABLE_MOCK_SMS=true

# ====================================================================
# APPLICATION DEFAULTS (Jordan market specific)
# ====================================================================

# Business Configuration
DEFAULT_CURRENCY=JOD
VAT_RATE=0.15

# Business Hours (24-hour format)
DEFAULT_OPEN_TIME=09:00
DEFAULT_CLOSE_TIME=21:00

# Google Maps API (for location services)
GOOGLE_MAPS_API_KEY=your_google_maps_api_key

# Analytics & Monitoring
ANALYTICS_ENABLED=true

# ====================================================================
# DEVELOPMENT & TESTING
# ====================================================================

# Enable detailed logging in development
DEBUG=lamsa:*

# Test configurations
TEST_DATABASE_URL=
TEST_JWT_SECRET=test_secret_for_development_only

# ====================================================================
# DEPLOYMENT SETTINGS (Production only)
# ====================================================================

DEPLOYMENT_PLATFORM=local
CLUSTER_NAME=lamsa-dev
NAMESPACE=development
MIN_REPLICAS=1
MAX_REPLICAS=1
TARGET_CPU_UTILIZATION=70

# ====================================================================
# PRODUCTION CHECKLIST
# ====================================================================
# Before deploying to production, ensure:
# ✅ JWT_SECRET is 64+ characters and cryptographically secure
# ✅ All database credentials are set correctly
# ✅ Redis is configured for performance
# ✅ Payment gateway credentials are valid (use production keys)
# ✅ SMS service is configured and tested
# ✅ Push notification tokens are set
# ✅ Monitoring services are configured (New Relic, Sentry)
# ✅ Alerting is configured (Slack, Email, PagerDuty)
# ✅ Backup configuration is tested
# ✅ CORS_ORIGINS includes your production domain
# ✅ NODE_ENV=production
# ✅ All feature flags are set appropriately
# ✅ All secrets are stored in secure environment variables
# ✅ File permissions are set to 600 for .env files