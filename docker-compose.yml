version: '3.8'

services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - lamsa_network

  # Lamsa API
  api:
    build:
      context: ./lamsa-api
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TAP_SECRET_KEY=${TAP_SECRET_KEY}
      - TAP_PUBLIC_KEY=${TAP_PUBLIC_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - EXPO_PUSH_TOKEN=${EXPO_PUSH_TOKEN}
      - SENTRY_DSN=${SENTRY_DSN}
      - APP_NAME=${APP_NAME:-Lamsa}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-ar}
      - CURRENCY=${CURRENCY:-JOD}
      - TIMEZONE=${TIMEZONE:-Asia/Amman}
      - ENABLE_SWAGGER=${ENABLE_SWAGGER:-false}
      - ENABLE_MORGAN_LOGGING=${ENABLE_MORGAN_LOGGING:-true}
      - ENABLE_DETAILED_LOGGING=${ENABLE_DETAILED_LOGGING:-true}
      - ENABLE_PERFORMANCE_MONITORING=${ENABLE_PERFORMANCE_MONITORING:-true}
    depends_on:
      - redis
    networks:
      - lamsa_network
    volumes:
      - ./lamsa-api/logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Lamsa Web (Next.js)
  web:
    build:
      context: ./lamsa-web
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_API_URL=${API_URL:-http://localhost:3000}
      - NEXT_PUBLIC_APP_NAME=${APP_NAME:-Lamsa}
      - NEXT_PUBLIC_DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-ar}
      - NEXT_PUBLIC_CURRENCY=${CURRENCY:-JOD}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3001}
    depends_on:
      - api
    networks:
      - lamsa_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
    networks:
      - lamsa_network

volumes:
  redis_data:
    driver: local

networks:
  lamsa_network:
    driver: bridge